{
  "swagger":"2.0",
  "info":{
    "title":"Coffee Bean API",
    "description":"This is the API Documentation for the Coffee Bean website",
    "version":"1.0.0"
  },
  "host":"localhost:8080",
  "basePath":"",
  "tags":[ 
      {
      "name": "General API",
      "description":"General APIs for BMaC"
      },
      {
        "name":"V1 User",
        "description":"V1 User APIs"
      },
      {
        "name":"V1 Auth",
        "description":"V1 Auth APIs"
      }
  ],
  "schemes":["http"],
  "consumes":["application/json"],
  "produces":["application/json"],
  "paths":{
    "/health":{
      "get":{
        "tags":["General API"],
        "summary":"Health Check",
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    },
    "/api/v1/login":{
      "post":{
        "tags":["V1 User"],
        "summary":"Login to app",
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    },
    "/api/v1/sign-up":{
      "post":{
        "tags":["V1 User"],
        "summary":"Create a new user",
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    },
    "/api/v1/verify/:token":{
      "get":{
        "tags":["V1 User"],
        "summary":"Verify user email",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "maxLength":250
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    },
    "/api/v1/users/resend-verification":{
      "post":{
        "tags":["V1 User"],
        "summary":"Request verification email",
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    },
    "/api/v1/users":{
      "get":{
        "tags":["V1 Auth"],
        "summary":"Get all users",
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    },
    "/api/v1/users/:id":{
      "get":{
        "tags":["V1 Auth"],
        "summary":"Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      },
      "post":{
        "tags":["V1 Auth"],
        "summary":"Update user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      },
      "delete":{
        "tags":["V1 Auth"],
        "summary":"Delete user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses":{
          "200":{
            "description":"OK"
          },
          "400":{
            "description":"Bad Request"
          },
          "401":{
            "description":"Unauthorized"
          },
          "403":{
            "description":"Forbidden"
          },
          "404":{
            "description":"Not Found"
          }
        }
      }
    }
  },
  "definitions":{
    "User":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "email":{
          "type":"string"
        },
        "first_name":{
          "type":"string"
        },
        "middle_name":{
          "type":"string"
        },
        "last_name":{
          "type":"string"
        },
        "user_name":{
          "type":"string"
        },
        "password":{
          "type":"string"
        },
        "mobile_number":{
          "type":"string"
        },
        "linkedin_account":{
          "type":"string"
        },
        "posts":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Post"
          }
        },
        "chats":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Chat"
          }
        },
        "commnents":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Comment"
          }
        },
        "messages":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Message"
          }
        },
        "active":{
          "type":"boolean"
        },
        "verify_token":{
          "type":"string"
        },
        "verify_token_expires":{
          "type":"DateTime"
        },
        "user_hashtags":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/UserHashTag"
          }
        },
        "created_at":{
          "type":"DateTime"
        },
        "updated_at":{
          "type":"DateTime"
        }
      }
    },
    "HashTag":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "name":{
          "type":"string"
        },
        "user_hashtags":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/UserHashTag"
          }
        }
      }
    },
    "UserHashTag":{
      "type":"object",
      "properties":{
          "user_id":{
            "type":"integer"
          },
          "hashtag_id":{
            "type":"integer"
          },
          "hashtags":{
            "type":"object",
            "$ref":"#/definitions/HashTag"
          },
          "users":{
            "type":"object",
            "$ref":"#/definitions/User"
          }
      }
    },
    "Profile":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "resume":{
          "type":"Json"
        },
        "avatar":{
          "type":"string"
        },
        "self_intro":{
          "type":"string"
        },
        "available_times":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/AvailableTime"
          }
        },
        "country":{
          "type":"string"
        },
        "city":{
          "type":"string"
        },
        "suburb":{
          "type":"string"
        },
        "geocode":{
          "type":"string"
        },
        "created_at":{
          "type":"DateTime"
        },
        "updated_at":{
          "type":"DateTime"
        }
      }
    },
    "AvailableTime":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "profile":{
          "type":"object",
          "$ref":"#/definitions/Profile"
        },
        "profile_id":{
          "type":"integer"
        },
        "start_time":{
          "type":"DateTime"
        },
        "end_time":{
          "type":"DateTime"
        },
        "created_at":{
          "type":"DateTime"
        },
        "updated_at":{
          "type":"DateTime"
        }
      }
    },
    "Post":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "user":{
          "type":"object",
          "$ref":"#/definitions/User"
        },
        "content":{
          "type":"string"
        },
        "commnents":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Comment"
          }
        },
        "created_at":{
          "type":"DateTime"
        },
        "updated_at":{
          "type":"DateTime"
        }
      }
    },
    "Comment":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "post":{
          "type":"object",
          "$ref":"#/definitions/Post"
        },
        "user":{
          "type":"object",
          "$ref":"#/definitions/User"
        },
        "user_id":{
          "type":"integer"
        },
        "post_id":{
          "type":"integer"
        },
        "content":{
          "type":"string"
        },
        "created_at":{
          "type":"DateTime"
        },
        "updated_at":{
          "type":"DateTime"
        }
      }
    },
    "Chat":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "user":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/User"
          }
        },
        "messages":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Message"
          }
        },
        "created_at":{
          "type":"DateTime"
        },
        "updated_at":{
          "type":"DateTime"
        }
      }
    },
    "Message":{
      "type":"object",
      "properties":{
        "id":{
          "type":"integer"
        },
        "chat":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/Chat"
          }
        },
        "user":{
          "type":"array",
          "items":{
            "$ref":"#/definitions/User"
          }
        },
        "chat_id":{
          "type":"integer"
        },
        "sender_id":{
          "type":"integer"
        },
        "content":{
          "type":"string"
        },
        "created_at":{
          "type":"DateTime"
        },
        "updated_at":{
          "type":"DateTime"
        }
      }
    }
  }
}